{"version":3,"file":"main.47bd765e46b0580634b5.hot-update.js","sources":["/Users/kayvon/Dev/gpio-sandbox/src/dashboard/Dashboard.tsx","/Users/kayvon/Dev/gpio-sandbox/src/dashboard/Pinout.tsx"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { createTheme, styled, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiDrawer from '@mui/material/Drawer';\nimport Box from '@mui/material/Box';\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Link from '@mui/material/Link';\nimport { MainListItems } from './listItems';\nimport Chart from './Chart';\nimport Orders from './Orders';\nimport Pinout from './Pinout';\nimport { PinIOStateType, PinState } from '../types';\nimport { GPIOContext } from '../App';\n\nfunction Copyright(props: any) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://nstrumenta.com/\">\n        nstrumenta\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth: number = 72;\n\ninterface AppBarProps extends MuiAppBarProps {\n}\n\nconst AppBar = styled(MuiAppBar, {})<AppBarProps>(({ theme }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  marginLeft: drawerWidth,\n  width: `calc(100% - ${drawerWidth}px)`,\n}));\n\nconst Drawer = styled(MuiDrawer, {})(\n  ({ theme }) => ({\n    '& .MuiDrawer-paper': {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      width: drawerWidth,\n      boxSizing: 'border-box',\n      overflowX: 'hidden',\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9),\n      },\n    },\n  }),\n);\n\nconst mdTheme = createTheme();\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n  }\n})\n\nconst time = new Date(2021, 11, 20, 8, 0, 0);\n\nexport interface OpenViews {\n  pins: false,\n  data: true\n}\n\nfunction DashboardContent() {\n  const [openViews, setOpenViews] = useState<OpenViews>({ pins: false, data: true });\n  const [activePin, setActivePin] = useState<string>('');\n  const data = useContext(GPIOContext);\n\n  const updateViews = (name: string, state: boolean) => {\n    console.log('updateViews', name, state)\n    setOpenViews({ ...openViews, [name]: state })\n  };\n\n  return (\n    <ThemeProvider theme={mdTheme}>\n      <Box sx={{ display: 'flex' }}>\n        <CssBaseline/>\n        <AppBar position=\"absolute\">\n\n          <Toolbar>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              Raspberry PI GPIO\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\">\n          <Toolbar\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'flex-end',\n              px: [1],\n            }}\n          >\n          </Toolbar>\n          <Divider/>\n          <List><MainListItems updateViews={updateViews} openViews={openViews}/></List>\n        </Drawer>\n\n        <Box\n          component=\"main\"\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === 'light'\n                ? theme.palette.grey[100]\n                : theme.palette.grey[900],\n            flexGrow: 1,\n            height: '100vh',\n            overflow: 'auto',\n          }}\n        >\n          <Toolbar/>\n          <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n            <Grid container spacing={3}>\n              {/* Pinout */}\n              {openViews.pins && (<Grid item xs={12} md={4} lg={3} sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-around',\n                width: '120px',\n              }}>\n                <Paper\n                  sx={{\n                    p: 2,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: 480,\n                    width: 1,\n                  }}\n                >\n                  <Pinout setActivePin={(id: string) => setActivePin(id)} />\n                </Paper>\n              </Grid>)}\n\n              {/* Chart */}\n              <Grid item xs={12} md={8} lg={9}>\n                <Paper\n                  sx={{\n                    p: 2,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: 480,\n                  }}\n                >\n                  <Chart data={activePin ? data[activePin] : []}/>\n                </Paper>\n              </Grid>\n              {/* Recent Orders */}\n              <Grid item xs={12}>\n                <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\n                  {/*<Orders rows={data}/>*/}\n                </Paper>\n              </Grid>\n            </Grid>\n            <Copyright sx={{ pt: 4 }}/>\n          </Container>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default function Dashboard() {\n  return <DashboardContent/>;\n}\n","import * as React from 'react';\nimport {\n  Paper,\n  Table,\n  TableRow,\n  TableBody,\n  Box,\n  TableCell,\n  TableContainer,\n  Typography,\n  IconProps,\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport { CircleTwoTone } from '@mui/icons-material';\n\nfunction preventDefault(event: React.MouseEvent) {\n  event.preventDefault();\n}\n\nenum PinType {\n  IO = 'io',\n  POWER = 'power',\n  GROUND = 'ground'\n}\n\ninterface GPIOPin {\n  id: string,\n  name: string,\n  state: 'in' | 'out' | null,\n  type: PinType,\n}\n\nconst gpio: [GPIOPin, GPIOPin][] = [\n  [{ id: '1', name: 'pow3v3', state: null, type: PinType.GROUND }, {\n    id: '2',\n    name: 'pow5v',\n    state: 'out',\n    type: PinType.POWER\n  }],\n  [{ id: '3', name: 'gpio 2', state: 'out', type: PinType.IO }, {\n    id: '4',\n    name: 'pow5v',\n    state: 'out',\n    type: PinType.POWER\n  }],\n  [{ id: '5', name: 'gpio 3', state: 'out', type: PinType.IO }, {\n    id: '6',\n    name: 'gnd',\n    state: 'out',\n    type: PinType.GROUND\n  }],\n  [{ id: '7', name: 'gpio 4', state: 'out', type: PinType.IO }, {\n    id: '8',\n    name: 'gpio uart',\n    state: 'out',\n    type: PinType.IO\n  }],\n  [{ id: '9', name: 'gnd', state: null, type: PinType.GROUND }, {\n    id: '10',\n    name: 'gpio uart',\n    state: 'out',\n    type: PinType.IO\n  }],\n  [{ id: '11', name: 'gpio 17', state: 'out', type: PinType.IO }, {\n    id: '12',\n    name: 'gpio pcm',\n    state: 'out',\n    type: PinType.IO\n  }],\n  [{ id: '13', name: 'gpio 27', state: 'out', type: PinType.IO }, {\n    id: '14',\n    name: 'gnd',\n    state: 'out',\n    type: PinType.GROUND\n  }],\n  [{ id: '15', name: 'gpio 22', state: 'out', type: PinType.IO }, {\n    id: '16',\n    name: 'gpio',\n    state: 'out',\n    type: PinType.IO\n  }],\n  [{ id: '17', name: 'pow3v3', state: null, type: PinType.POWER }, {\n    id: '18',\n    name: 'gpio',\n    state: 'out',\n    type: PinType.IO\n  }],\n  [{ id: '19', name: 'gpio 10', state: 'out', type: PinType.IO }, {\n    id: '20',\n    name: 'gnd',\n    state: 'out',\n    type: PinType.IO\n  }],\n  [{ id: '21', name: 'gpio 9', state: 'out', type: PinType.IO }, {\n    id: '22',\n    name: 'gpio',\n    state: 'out',\n    type: PinType.IO\n  }],\n  [{ id: '23', name: 'gpio 11', state: 'out', type: PinType.IO }, {\n    id: '24',\n    name: 'gpio spi',\n    state: 'out',\n    type: PinType.IO\n  }],\n  [{ id: '25', name: 'gnd', state: null, type: PinType.GROUND }, {\n    id: '26',\n    name: 'gpio spi',\n    state: 'out',\n    type: PinType.IO\n  }],\n  [{ id: '27', name: 'gpio 0', state: 'out', type: PinType.IO }, {\n    id: '28',\n    name: 'gpio i2c',\n    state: 'out',\n    type: PinType.IO\n  }],\n  [{ id: '29', name: 'gpio 5', state: 'out', type: PinType.IO }, {\n    id: '30',\n    name: 'gnd',\n    state: 'out',\n    type: PinType.GROUND\n  }],\n  [{ id: '31', name: 'gpio 6', state: 'out', type: PinType.IO }, {\n    id: '32',\n    name: 'gpio',\n    state: 'out',\n    type: PinType.IO\n  }],\n  [{ id: '33', name: 'gpio 13', state: 'out', type: PinType.IO }, {\n    id: '34',\n    name: 'gnd',\n    state: 'out',\n    type: PinType.GROUND\n  }],\n  [{ id: '35', name: 'gpio 19', state: 'out', type: PinType.IO }, {\n    id: '36',\n    name: 'gpio',\n    state: 'out',\n    type: PinType.IO\n  }],\n  [{ id: '37', name: 'gpio 26', state: 'out', type: PinType.IO }, {\n    id: '38',\n    name: 'gpio pcm',\n    state: 'out',\n    type: PinType.IO\n  }],\n  [{ id: '39', name: 'gnd', state: null, type: PinType.GROUND }, {\n    id: '40',\n    name: 'gpio pcm',\n    state: 'out',\n    type: PinType.IO\n  }],\n];\n\nconst PinIcon = ({ type }: IconProps & { type: PinType }) => {\n  return (<CircleTwoTone color={\n    type === PinType.IO\n      ? 'primary'\n      : type === PinType.POWER\n        ? 'secondary'\n        : 'disabled'\n  }\n  />)\n};\n\nexport default function Pinout({ setActivePin }: { setActivePin: (id: string) => void }) {\n  return (\n    <React.Fragment><TableContainer component={Paper}>\n      <Table size=\"small\" aria-label=\"GPIO Pinout\">\n        <TableBody>\n          {gpio.map((row) => (\n            <TableRow\n              key={`${row[0].id}:${row[1].id}`}\n              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n            >\n              <TableCell component=\"td\" sx={{ backgroundColor: 'default' }}>\n                <Typography fontSize={10}>{row[0].name}</Typography>\n              </TableCell>\n              <TableCell sx={{ borderRight: 1, backgroundColor: 'background' }} align=\"right\"><PinIcon\n                type={row[0].type}/></TableCell>\n              <TableCell align=\"left\"><PinIcon type={row[0].type}/></TableCell>\n              <TableCell component=\"td\">\n                <Typography fontSize={10}>{row[1].name}</Typography>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </React.Fragment>\n  );\n}\n"],"mappings":"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","sourceRoot":""}