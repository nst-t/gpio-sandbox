{"version":3,"file":"main.eededcfeee6a372068bd.hot-update.js","sources":["/Users/kayvon/Dev/gpio-sandbox/src/App.tsx","/Users/kayvon/Dev/gpio-sandbox/src/dashboard/Chart.tsx","/Users/kayvon/Dev/gpio-sandbox/src/dashboard/Dashboard.tsx","/Users/kayvon/Dev/gpio-sandbox/src/dashboard/Orders.tsx","/Users/kayvon/Dev/gpio-sandbox/src/types.ts"],"sourcesContent":["import * as React from 'react';\n\nimport Dashboard from './dashboard/Dashboard'\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport { PinState, PinIOStateType } from './types';\n\ninterface GPIOState { [key: string]: PinState }\n\nconst initialGPIOState: GPIOState = {};\nfor (let i = 1; i <= 40; i += 1) {\n    initialGPIOState[i.toString()] = {\n      id: i.toString(),\n      value: null,\n      name: '',\n      updatedAt: new Date(Date.now() + i * 30 * 60),\n      io: PinIOStateType.IN,\n    }\n}\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}.\n    </Typography>\n  );\n}\n\nexport default function App() {\n  return (\n    <Box>\n      <Dashboard />\n    </Box>\n\n  );\n}\n","import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\nimport { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport Title from './Title';\nimport { PinState } from '../types';\n\nexport default function Chart({ data }: { data: PinState[] }) {\n  const theme = useTheme();\n\n  const displayFormattedData = data.map((data) => {\n    return {\n      ...data,\n      time: `${data.updatedAt.getHours()}:${data.updatedAt.getMinutes()}`\n    }\n  })\n\n  return (\n    <React.Fragment>\n      <Title>Data</Title>\n      <ResponsiveContainer>\n        <LineChart\n          data={displayFormattedData}\n          margin={{\n            top: 16,\n            right: 16,\n            bottom: 0,\n            left: 24,\n          }}\n        >\n          <XAxis\n            dataKey=\"time\"\n            stroke={theme.palette.text.secondary}\n            style={theme.typography.body2}\n          />\n          <YAxis\n            stroke={theme.palette.text.secondary}\n            style={theme.typography.body2}\n          >\n            <Label\n              angle={270}\n              position=\"left\"\n              style={{\n                textAnchor: 'middle',\n                fill: theme.palette.text.primary,\n                ...theme.typography.body1,\n              }}\n            >\n              Value\n            </Label>\n          </YAxis>\n          <Line\n            isAnimationActive={false}\n            type=\"monotone\"\n            dataKey=\"value\"\n            stroke={theme.palette.primary.main}\n            dot={false}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    </React.Fragment>\n  );\n}\n","import React, { useState } from 'react';\nimport { createTheme, styled, ThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport MuiDrawer from '@mui/material/Drawer';\nimport Box from '@mui/material/Box';\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport Container from '@mui/material/Container';\nimport Grid from '@mui/material/Grid';\nimport Paper from '@mui/material/Paper';\nimport Link from '@mui/material/Link';\nimport { MainListItems } from './listItems';\nimport Chart from './Chart';\nimport Orders from './Orders';\nimport Deposits from './Deposits';\nimport { PinIOStateType, PinState } from '../types';\n\nfunction Copyright(props: any) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://nstrumenta.com/\">\n        nstrumenta\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth: number = 72;\n\ninterface AppBarProps extends MuiAppBarProps {\n}\n\nconst AppBar = styled(MuiAppBar, {})<AppBarProps>(({ theme }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  marginLeft: drawerWidth,\n  width: `calc(100% - ${drawerWidth}px)`,\n}));\n\nconst Drawer = styled(MuiDrawer, {})(\n  ({ theme }) => ({\n    '& .MuiDrawer-paper': {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      width: drawerWidth,\n      boxSizing: 'border-box',\n      overflowX: 'hidden',\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9),\n      },\n    },\n  }),\n);\n\nconst mdTheme = createTheme();\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n  }\n})\n\nconst time = new Date(2021, 11, 20, 8, 0, 0);\n\nconst data: PinState[] = [{\n  id: '1',\n  updatedAt: time,\n  name: 'Pin 1',\n  io: PinIOStateType.IN,\n  value: 10,\n}, {\n  id: '2',\n  updatedAt: new Date(time.getTime() + 30 * 60 * 1000),\n  name: 'Pin 2',\n  io: PinIOStateType.IN,\n  value: 80,\n}, {\n  id: '3',\n  updatedAt: new Date(time.getTime() + 60 * 60 * 1000),\n  name: 'Pin 3',\n  io: PinIOStateType.IN,\n  value: 340,\n}, {\n  id: '4',\n  updatedAt: new Date(time.getTime() + 900 * 60 * 1000),\n  name: 'Pin 4',\n  io: PinIOStateType.OUT,\n  value: 80,\n}, {\n  id: '5',\n  updatedAt: new Date(time.getTime() + 900 * 60 * 1000),\n  name: 'Pin 5',\n  io: PinIOStateType.OUT,\n  value: 35,\n}]\n\nexport interface OpenViews {\n  pins: false,\n  data: true\n}\n\nfunction DashboardContent() {\n  const [openViews, setOpenViews] = useState<OpenViews>({ pins: false, data: true });\n\n  const updateViews = (name: string, state: boolean) => {\n    console.log('updateViews', name, state)\n    setOpenViews({ ...openViews, [name]: state })\n  };\n\n  return (\n    <ThemeProvider theme={mdTheme}>\n      <Box sx={{ display: 'flex' }}>\n        <CssBaseline/>\n        <AppBar position=\"absolute\">\n\n          <Toolbar>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              Raspberry PI GPIO\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer variant=\"permanent\">\n          <Toolbar\n            sx={{\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'flex-end',\n              px: [1],\n            }}\n          >\n          </Toolbar>\n          <Divider/>\n          <List><MainListItems updateViews={updateViews} openViews={openViews}/></List>\n        </Drawer>\n\n        <Box\n          component=\"main\"\n          sx={{\n            backgroundColor: (theme) =>\n              theme.palette.mode === 'light'\n                ? theme.palette.grey[100]\n                : theme.palette.grey[900],\n            flexGrow: 1,\n            height: '100vh',\n            overflow: 'auto',\n          }}\n        >\n          <Toolbar/>\n          <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n            <Grid container spacing={3}>\n              {/* Pinout */}\n              {openViews.pins && (<Grid item xs={12} md={4} lg={3} sx={{\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'space-around',\n                width: '120px',\n              }}>\n                <Paper\n                  sx={{\n                    p: 2,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: 480,\n                    width: 1,\n                  }}\n                >\n                  <Deposits />\n                </Paper>\n              </Grid>)}\n\n              {/* Chart */}\n              <Grid item xs={12} md={8} lg={9}>\n                <Paper\n                  sx={{\n                    p: 2,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    height: 480,\n                  }}\n                >\n                  <Chart data={data}/>\n                </Paper>\n              </Grid>\n              {/* Recent Orders */}\n              <Grid item xs={12}>\n                <Paper sx={{ p: 2, display: 'flex', flexDirection: 'column' }}>\n                  <Orders rows={data}/>\n                </Paper>\n              </Grid>\n            </Grid>\n            <Copyright sx={{ pt: 4 }}/>\n          </Container>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n}\n\nexport default function Dashboard() {\n  return <DashboardContent/>;\n}\n","import * as React from 'react';\nimport Link from '@mui/material/Link';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Title from './Title';\nimport { PinState } from '../types';\n\nfunction preventDefault(event: React.MouseEvent) {\n  event.preventDefault();\n}\n\nexport default function Orders({ rows }: {\n  rows: PinState[]\n}) {\n  return (\n    <React.Fragment>\n      <Title>GPIO Pin State</Title>\n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Pin</TableCell>\n            <TableCell>I/O</TableCell>\n            <TableCell>Time</TableCell>\n            <TableCell align=\"right\">Last Value</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map(({ id, updatedAt, name, io, value }) => (\n            <TableRow key={id}>\n              <TableCell>{name}</TableCell>\n              <TableCell>{io}</TableCell>\n              <TableCell>{`${updatedAt.getHours()}:${updatedAt.getMinutes()}`}</TableCell>\n              <TableCell align=\"right\">{value || '—'}</TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </React.Fragment>\n  );\n}\n","export enum PinIOStateType {\n  IN = 'in',\n  OUT = 'out',\n}\n\nexport interface PinState {\n  id: string,\n  updatedAt: Date,\n  name: string,\n  io: PinIOStateType,\n}\n"],"mappings":"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","sourceRoot":""}