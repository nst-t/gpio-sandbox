{"version":3,"file":"main.d849f5d7ae2cc5f04a8b.hot-update.js","sources":["/Users/kayvon/Dev/gpio-sandbox/src/App.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport Dashboard from './dashboard/Dashboard'\nimport Box from '@mui/material/Box';\nimport { NstrumentaClient } from 'nstrumenta';\nimport { PinState, PinIOStateType, GPIOTimeSeriesData, GPIOState, PinData } from './types';\nimport { createContext, useEffect, useState } from 'react';\n\nconst CHANNEL = 'gpio';\n\nconst nst = new NstrumentaClient({\n  apiKey: '',\n  hostUrl: 'ws://localhost:8088',\n  projectId: 'mapbox-geo'\n});\n\nconst initialGPIOState: GPIOState = {};\nfor (let i = 1; i <= 40; i += 1) {\n  initialGPIOState[i.toString()] = {\n    id: i.toString(),\n    updatedAt: new Date(),\n    io: PinIOStateType.IN,\n  }\n}\n\nconst initialTimeSeriesData: GPIOTimeSeriesData = {};\nfor (let i = 1; i <= 40; i += 1) {\n  initialTimeSeriesData[i.toString()] = [{\n    id: i.toString(),\n    date: new Date(Date.now() + 30 * 60 * 1000),\n    value: null,\n  }\n  ]\n}\n\nexport const GPIOContext = createContext<GPIOTimeSeriesData>({});\n\nexport default function App() {\n  const [data, setData] = useState<GPIOTimeSeriesData>(initialTimeSeriesData);\n\n  useEffect(() => {\n    nst.addListener('open', () => {\n      console.log('a connection is made!');\n      nst.subscribe(CHANNEL, (message: string) => {\n        console.log(message);\n        const pinData: PinData = JSON.parse(message);\n        console.log(pinData.id, pinData.date, pinData.value, data[pinData.id]);\n        setData( Object.assign({}, data, { [pinData.id]: data[pinData.id].concat(pinData) }))\n      })\n    })\n\n    nst.init();\n    // return () => nst.unsubscribe(CHANNEL);\n  }, []);\n\n\n  return (\n    <GPIOContext.Provider value={data}>\n      <Box>\n        <Dashboard/>\n      </Box>\n    </GPIOContext.Provider>\n\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AA5BA;AACA;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}