{"version":3,"file":"main.348acef204df5a27518f.hot-update.js","sources":["/Users/kayvon/Dev/gpio-sandbox/src/dashboard/Chart.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useTheme } from '@mui/material/styles';\n// import { LineChart, Line, XAxis, YAxis, Label, ResponsiveContainer } from 'recharts';\nimport { VictoryLine as Line, VictoryChart, VictoryAxis as Axis } from 'victory';\nimport Title from './Title';\n\n// Generate Sales Data\nfunction createData(time: string, amount?: number): { time: string, amount: number } {\n  return { time, amount: amount ? amount : 0 };\n}\n\nconst data: ({ time: string, amount: number })[] = [\n  createData('00:00', 0),\n  createData('03:00', 300),\n  createData('06:00', 600),\n  createData('09:00', 800),\n  createData('12:00', 1500),\n  createData('15:00', 2000),\n  createData('18:00', 2400),\n  createData('21:00', 2400),\n  createData('24:00', undefined),\n];\n\nexport default function Chart() {\n  const theme = useTheme();\n\n  return (\n    <React.Fragment>\n      <Title>Today</Title>\n      {/*<ResponsiveContainer>*/}\n        <VictoryChart\n          // margin={{\n          //   top: 16,\n          //   right: 16,\n          //   bottom: 0,\n          //   left: 24,\n          // }}\n          domainPadding={20}\n        >\n          <Axis\n            tickValues={data.map(( time ) => time)}\n\n          />\n          <Axis\n            dependentAxis\n            tickFormat={(x) => (`$${x / 1000}k`)}\n          >\n            {/*<Label*/}\n            {/*  angle={270}*/}\n            {/*  position=\"left\"*/}\n            {/*  style={{*/}\n            {/*    textAnchor: 'middle',*/}\n            {/*    fill: theme.palette.text.primary,*/}\n            {/*    ...theme.typography.body1,*/}\n            {/*  }}*/}\n            {/*>*/}\n            {/*  Sales ($)*/}\n            {/*</Label>*/}\n          </Axis>\n          <Line\n            data={data}\n            x=\"time\"\n            y=\"amount\"\n          />\n        </VictoryChart>\n      {/*</ResponsiveContainer>*/}\n    </React.Fragment>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAYA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AANA;AAOA;AAPA;AAUA;AADA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAiBA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AA7BA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAyCA;AACA;AA9CA;AACA;;;AADA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}